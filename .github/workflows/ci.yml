name: Python CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    
    # Define a strategy to test against different Python versions if needed
    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip' # Cache dependencies for faster builds

      - name: ⚙️ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dms-backend/requirements.txt
          # Install gunicorn for production-like environment check
          pip install gunicorn

      - name: 🧹 Lint code with Black (or Flake8/Pylint)
        # Assuming you'd have a linter like Black in your requirements.txt
        run: |
          pip install black
          # This checks files for formatting issues without modifying them
          black --check .
      
      # ⚠️ Add this step if you have a separate file for your unit tests (e.g., test_app.py)
      - name: 🧪 Run tests with pytest
        run: |
          pip install pytest
          # Replace 'pytest' with your actual test command
          # pytest
